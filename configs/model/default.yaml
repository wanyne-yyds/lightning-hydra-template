imgsz: ${data.imgsz}
save_dir: ${hydra:runtime.output_dir}  # save directory
close_mosaic: 0
names: ${data.names}
multi_scale: False # (bool) Whether to use multi-scale during training
task: ${data.task}

# Predict settings -----------------------------------------------------------------------------------------------------
pre:
  source:  # (str, optional) source directory for images or videos
  vid_stride: 1  # (int) video frame-rate stride
  stream_buffer: False  # (bool) buffer all streaming frames (True) or return the most recent frame (False)
  visualize: False  # (bool) visualize model features
  augment: False  # (bool) apply image augmentation to prediction sources
  agnostic_nms: False  # (bool) class-agnostic NMS
  classes:  # (int | list[int], optional) filter results by class, i.e. classes=0, or classes=[0,2,3]
  retina_masks: False  # (bool) use high-resolution segmentation masks
  embed:  # (list[int], optional) return feature vectors/embeddings from given layers

val:
  task: ${data.task}
  single_cls: True

  # Val/Test settings ----------------------------------------------------------------------------------------------------
  val: True  # validate/test during training
  save_json: False  # (bool) save results to JSON file
  save_hybrid: False  # save hybrid version of labels (labels + additional predictions)
  conf:  # object confidence threshold for detection (default 0.25 predict, 0.001 val)
  iou: 0.7  # intersection over union (IoU) threshold for NMS
  max_det: 300  # maximum number of detections per image
  half: False  # use half precision (FP16)
  dnn: False  # use OpenCV DNN for ONNX inference
  plots: True  # save plots during train/val
  speed: False # calculate the fps follow the hybridnet https://github.com/datvuthanh/HybridNets/blob/main/hybridnets_test.py#L211

  # Visualize settings ---------------------------------------------------------------------------------------------------
  show: False  # (bool) show predicted images and videos if environment allows
  save_frames: False  # (bool) save predicted individual video frames
  save_txt: False  # (bool) save results as .txt file
  save_conf: False  # (bool) save results with confidence scores
  save_crop: False  # (bool) save cropped images with results
  show_labels: True  # (bool) show prediction labels, i.e. 'person'
  show_conf: True  # (bool) show prediction confidence, i.e. '0.99'
  show_boxes: True  # (bool) show prediction boxes
  # line_width:   # (int, optional) line width of the bounding boxes. Scaled to image size if None.

hyp:
  box: 7.5  # box loss gain
  cls: 0.5  # cls loss gain (scale with pixels)
  dfl: 1.5  # dfl loss gain
  TL: 8.0 # TL loss gain
  FL: 24.0 # FL loss for segment gain
  pose: 12.0  # pose loss gain
  kobj: 1.0  # keypoint obj loss gain
  label_smoothing: 0.0  # label smoothing (fraction)
  binary_mask_threshold: 0.5  # segment task binary mask threshold